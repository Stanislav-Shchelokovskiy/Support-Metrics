version: '3.4'

x-support_metrics:
  &support_metrics
  image: shchelokovskiy/support_metrics:latest
  restart: always
  environment:
    - SQL_SERVER
    - SQL_DATABASE
    - SQL_USER
    - SQL_PASSWORD
    - SERVER_PORT
    - FLOWER_PORT
    - CORS_ORIGINS
    - QUERY_SERVICE
    - REDIS_SERVICE
    - REDIS_PORT
    - CELERY_BROKER_URL=redis://${REDIS_SERVICE}:${REDIS_PORT}/1
    - CELERY_RESULT_BACKEND=redis://${REDIS_SERVICE}:${REDIS_PORT}/1
    - REDIS_DB=SUPPORT_ANALYTICS
    - DB_HOME
    - SQLITE_DATABASE=${DB_HOME}/db
    - LD_LIBRARY_PATH=/usr/lib #https://stackoverflow.com/questions/49920444/upgrading-sqlite3-version-used-in-python3-on-linux
    - UPDATE_ON_STARTUP
    - PRODUCTION

services:
  support_metrics_dashboard:
    <<: *support_metrics
    hostname: support_metrics_dashboard
    container_name: support_metrics_dashboard
    command: celery -A worker flower --port=${FLOWER_PORT}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${FLOWER_PORT}/healthcheck"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s
    ports:
      - "${FLOWER_PORT}:${FLOWER_PORT}"

  support_metrics_worker:
    <<: *support_metrics
    hostname: support_metrics_worker
    container_name: support_metrics_worker
    command: celery --app worker worker --beat --loglevel=INFO --concurrency 7 #--logfile=logs/celery.log
    volumes:
      - support_analytics-volume:${DB_HOME}
    depends_on:
      support_metrics_dashboard:
        condition: service_healthy

  support_metrics_server:
    <<: *support_metrics
    hostname: support_metrics_server
    container_name: support_metrics_server
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    command: uvicorn server:app --host 0.0.0.0 --port $SERVER_PORT --log-level critical
    volumes:
      - support_analytics-volume:${DB_HOME}

networks:
  default:
    name: support_analytics
    external: true

volumes:
  support_analytics-volume:
